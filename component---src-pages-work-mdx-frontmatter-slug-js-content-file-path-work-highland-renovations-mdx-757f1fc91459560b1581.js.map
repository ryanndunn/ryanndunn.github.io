{"version":3,"file":"component---src-pages-work-mdx-frontmatter-slug-js-content-file-path-work-highland-renovations-mdx-757f1fc91459560b1581.js","mappings":"oMAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,+BAClD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOQ,QAASC,GAAaP,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWT,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCRA,MAAMU,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,OAAON,EAAAA,cAAoBO,EAAAA,EAAQ,KAAMP,EAAAA,cAAoB,KAAM,KAAMK,EAAKG,IAAIC,YAAYC,OAAQJ,EAAS,EAWlG,SAASK,EAAiBlB,GACvC,OAAOO,EAAAA,cAAoBG,EAAUV,EAAOO,EAAAA,cAAoBY,EAAqBnB,GACvF,C,+ECEA,MAjBa,IAGT,8BACE,uBAAKoB,UAAU,QAAO,gBAAC,KAAI,CAACC,GAAG,KAAI,cACnC,uBAAKD,UAAU,UACb,0BACI,0BAAI,gBAAC,KAAI,CAACC,GAAG,KAAI,aACjB,0BAAI,gBAAC,KAAI,CAACA,GAAG,KAAI,WACjB,0BAAI,gBAAC,KAAI,CAACA,GAAG,KAAI,aCW7B,MApBY,IAGR,2BACE,0BACE,0BACI,gBAAC,KAAI,CAACA,GAAG,SAAQ,SAErB,0BACI,gBAAC,KAAI,CAACA,GAAG,UAAS,UAEtB,0BACI,gBAAC,KAAI,CAACA,GAAG,KAAI,aCCzB,MAZe,IAAmB,IAAlB,SAAER,GAAU,EACxB,OACI,2BACE,gBAAC,EAAI,MACL,4BACGA,GAEH,gBAAC,EAAG,MACA,C,sECqBP,MAAMS,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBjB,GAC/B,MAAMkB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfhB,EACFA,EAAWkB,GAGb,IAAIA,KAAsBlB,IAChC,CAACkB,EAAmBlB,GACzB,C","sources":["webpack://ryan-dunn-portfolio/./work/highland-renovations.mdx","webpack://ryan-dunn-portfolio/./src/pages/work/{mdx.frontmatter__slug}.js","webpack://ryan-dunn-portfolio/./src/components/head.js","webpack://ryan-dunn-portfolio/./src/components/nav.js","webpack://ryan-dunn-portfolio/./src/components/layout.js","webpack://ryan-dunn-portfolio/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"Highland Renovations Content\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/ryandunn/Desktop/dunnsite/ryan-dunn-portfolio/work/highland-renovations.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../../components/layout';\nconst WorkPost = ({data, children}) => {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), children);\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n      }\n    }\n  }`;\nWorkPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(WorkPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\nimport { Link } from 'gatsby'\n\nconst Head = () => {\n\n  return (\n    <header>\n      <div className=\"logo\"><Link to=\"/\">Ryan Dunn</Link></div>\n      <div className=\"social\">\n        <ul>\n            <li><Link to=\"/\">linkedIn</Link></li>\n            <li><Link to=\"/\">github</Link></li>\n            <li><Link to=\"/\">email</Link></li>\n        </ul>\n      </div>\n    </header>\n  )\n\n}\n\nexport default Head","import * as React from 'react'\nimport { Link } from 'gatsby'\n\nconst Nav = () => {\n\n  return (\n    <nav>\n      <ul>\n        <li>\n            <Link to=\"/work\">Work</Link>\n        </li>\n        <li>\n            <Link to=\"/about\">About</Link>\n        </li>\n        <li>\n            <Link to=\"/\">Resume</Link>\n        </li>\n      </ul>\n    </nav>\n  )\n\n}\n\nexport default Nav","import * as React from 'react'\nimport Head from './head'\nimport Nav from './nav'\n\nconst Layout = ({ children }) => {\n    return (\n        <div>\n          <Head/>\n          <main>\n            {children}\n          </main>\n          <Nav/>\n        </div>\n      )\n}\n\nexport default Layout","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","WorkPost","_ref","data","children","Layout","mdx","frontmatter","title","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","className","to","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}